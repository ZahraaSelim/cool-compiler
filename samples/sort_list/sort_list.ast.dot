digraph AST {
    node [shape=box];
    0 [label="Program\nLine: 24"];
    1 [label="Class: List\nInherits: IO\nLine: 24"];
    2 [label="Method: isNil\nReturn: Bool\nLine: 28"];
    3 [label="Block\nLine: 28"];
    4 [label="MethodCall: abort\nLine: 28"];
    3 -> 4;
    5 [label="Bool: true\nLine: 28"];
    3 -> 5;
    2 -> 3;
    1 -> 2;
    6 [label="Method: cons\nReturn: Cons\nLine: 30"];
    7 [label="Formal: hd\nType: Int\nLine: 30"];
    6 -> 7;
    8 [label="Let\nLine: 31"];
    9 [label="LetDecl: new_cell\nType: Cons\nLine: 31"];
    10 [label="New: Cons\nLine: 31"];
    9 -> 10;
    8 -> 9;
    11 [label="Dispatch: init\nLine: 32"];
    12 [label="Id: new_cell\nLine: 32"];
    11 -> 12;
    13 [label="Id: hd\nLine: 32"];
    11 -> 13;
    14 [label="Id: self\nLine: 32"];
    11 -> 14;
    8 -> 11;
    6 -> 8;
    1 -> 6;
    15 [label="Method: car\nReturn: Int\nLine: 41"];
    16 [label="Block\nLine: 41"];
    17 [label="MethodCall: abort\nLine: 41"];
    16 -> 17;
    18 [label="New: Int\nLine: 41"];
    16 -> 18;
    15 -> 16;
    1 -> 15;
    19 [label="Method: cdr\nReturn: List\nLine: 43"];
    20 [label="Block\nLine: 43"];
    21 [label="MethodCall: abort\nLine: 43"];
    20 -> 21;
    22 [label="New: List\nLine: 43"];
    20 -> 22;
    19 -> 20;
    1 -> 19;
    23 [label="Method: rev\nReturn: List\nLine: 45"];
    24 [label="MethodCall: cdr\nLine: 45"];
    23 -> 24;
    1 -> 23;
    25 [label="Method: sort\nReturn: List\nLine: 47"];
    26 [label="MethodCall: cdr\nLine: 47"];
    25 -> 26;
    1 -> 25;
    27 [label="Method: insert\nReturn: List\nLine: 49"];
    28 [label="Formal: i\nType: Int\nLine: 49"];
    27 -> 28;
    29 [label="MethodCall: cdr\nLine: 49"];
    27 -> 29;
    1 -> 27;
    30 [label="Method: rcons\nReturn: List\nLine: 51"];
    31 [label="Formal: i\nType: Int\nLine: 51"];
    30 -> 31;
    32 [label="MethodCall: cdr\nLine: 51"];
    30 -> 32;
    1 -> 30;
    33 [label="Method: print_list\nReturn: Object\nLine: 53"];
    34 [label="MethodCall: abort\nLine: 53"];
    33 -> 34;
    1 -> 33;
    0 -> 1;
    35 [label="Class: Cons\nInherits: List\nLine: 56"];
    36 [label="Attribute: xcar\nType: Int\nLine: 57"];
    35 -> 36;
    37 [label="Attribute: xcdr\nType: List\nLine: 58"];
    35 -> 37;
    38 [label="Method: isNil\nReturn: Bool\nLine: 62"];
    39 [label="Bool: false\nLine: 62"];
    38 -> 39;
    35 -> 38;
    40 [label="Method: init\nReturn: Cons\nLine: 64"];
    41 [label="Formal: hd\nType: Int\nLine: 64"];
    40 -> 41;
    42 [label="Formal: tl\nType: List\nLine: 64"];
    40 -> 42;
    43 [label="Block\nLine: 65"];
    44 [label="Assignment: xcar\nLine: 66"];
    45 [label="Id: hd\nLine: 66"];
    44 -> 45;
    43 -> 44;
    46 [label="Assignment: xcdr\nLine: 67"];
    47 [label="Id: tl\nLine: 67"];
    46 -> 47;
    43 -> 46;
    48 [label="Id: self\nLine: 68"];
    43 -> 48;
    40 -> 43;
    35 -> 40;
    49 [label="Method: car\nReturn: Int\nLine: 72"];
    50 [label="Id: xcar\nLine: 72"];
    49 -> 50;
    35 -> 49;
    51 [label="Method: cdr\nReturn: List\nLine: 74"];
    52 [label="Id: xcdr\nLine: 74"];
    51 -> 52;
    35 -> 51;
    53 [label="Method: rev\nReturn: List\nLine: 76"];
    54 [label="Dispatch: rcons\nLine: 76"];
    55 [label="Dispatch: rev\nLine: 76"];
    56 [label="Id: xcdr\nLine: 76"];
    55 -> 56;
    54 -> 55;
    57 [label="Id: xcar\nLine: 76"];
    54 -> 57;
    53 -> 54;
    35 -> 53;
    58 [label="Method: sort\nReturn: List\nLine: 78"];
    59 [label="Dispatch: insert\nLine: 78"];
    60 [label="Dispatch: sort\nLine: 78"];
    61 [label="Id: xcdr\nLine: 78"];
    60 -> 61;
    59 -> 60;
    62 [label="Id: xcar\nLine: 78"];
    59 -> 62;
    58 -> 59;
    35 -> 58;
    63 [label="Method: insert\nReturn: List\nLine: 80"];
    64 [label="Formal: i\nType: Int\nLine: 80"];
    63 -> 64;
    65 [label="IfElse\nLine: 81"];
    66 [label="BinaryOp: <\nLine: 81"];
    67 [label="Id: i\nLine: 81"];
    68 [label="Id: xcar\nLine: 81"];
    66 -> 67;
    66 -> 68;
    69 [label="Dispatch: init\nLine: 82"];
    70 [label="New: Cons\nLine: 82"];
    69 -> 70;
    71 [label="Id: i\nLine: 82"];
    69 -> 71;
    72 [label="Id: self\nLine: 82"];
    69 -> 72;
    73 [label="Dispatch: init\nLine: 84"];
    74 [label="New: Cons\nLine: 84"];
    73 -> 74;
    75 [label="Id: xcar\nLine: 84"];
    73 -> 75;
    76 [label="Dispatch: insert\nLine: 84"];
    77 [label="Id: xcdr\nLine: 84"];
    76 -> 77;
    78 [label="Id: i\nLine: 84"];
    76 -> 78;
    73 -> 76;
    65 -> 66;
    65 -> 69;
    65 -> 73;
    63 -> 65;
    35 -> 63;
    79 [label="Method: rcons\nReturn: List\nLine: 89"];
    80 [label="Formal: i\nType: Int\nLine: 89"];
    79 -> 80;
    81 [label="Dispatch: init\nLine: 89"];
    82 [label="New: Cons\nLine: 89"];
    81 -> 82;
    83 [label="Id: xcar\nLine: 89"];
    81 -> 83;
    84 [label="Dispatch: rcons\nLine: 89"];
    85 [label="Id: xcdr\nLine: 89"];
    84 -> 85;
    86 [label="Id: i\nLine: 89"];
    84 -> 86;
    81 -> 84;
    79 -> 81;
    35 -> 79;
    87 [label="Method: print_list\nReturn: Object\nLine: 91"];
    88 [label="Block\nLine: 92"];
    89 [label="MethodCall: out_int\nLine: 93"];
    90 [label="Id: xcar\nLine: 93"];
    89 -> 90;
    88 -> 89;
    91 [label="MethodCall: out_string\nLine: 94"];
    92 [label="String: \"\n\"\nLine: 94"];
    91 -> 92;
    88 -> 91;
    93 [label="Dispatch: print_list\nLine: 95"];
    94 [label="Id: xcdr\nLine: 95"];
    93 -> 94;
    88 -> 93;
    87 -> 88;
    35 -> 87;
    0 -> 35;
    95 [label="Class: Nil\nInherits: List\nLine: 100"];
    96 [label="Method: isNil\nReturn: Bool\nLine: 101"];
    97 [label="Bool: true\nLine: 101"];
    96 -> 97;
    95 -> 96;
    98 [label="Method: rev\nReturn: List\nLine: 103"];
    99 [label="Id: self\nLine: 103"];
    98 -> 99;
    95 -> 98;
    100 [label="Method: sort\nReturn: List\nLine: 105"];
    101 [label="Id: self\nLine: 105"];
    100 -> 101;
    95 -> 100;
    102 [label="Method: insert\nReturn: List\nLine: 107"];
    103 [label="Formal: i\nType: Int\nLine: 107"];
    102 -> 103;
    104 [label="MethodCall: rcons\nLine: 107"];
    105 [label="Id: i\nLine: 107"];
    104 -> 105;
    102 -> 104;
    95 -> 102;
    106 [label="Method: rcons\nReturn: List\nLine: 109"];
    107 [label="Formal: i\nType: Int\nLine: 109"];
    106 -> 107;
    108 [label="Dispatch: init\nLine: 109"];
    109 [label="New: Cons\nLine: 109"];
    108 -> 109;
    110 [label="Id: i\nLine: 109"];
    108 -> 110;
    111 [label="Id: self\nLine: 109"];
    108 -> 111;
    106 -> 108;
    95 -> 106;
    112 [label="Method: print_list\nReturn: Object\nLine: 111"];
    113 [label="Bool: true\nLine: 111"];
    112 -> 113;
    95 -> 112;
    0 -> 95;
    114 [label="Class: Main\nInherits: IO\nLine: 116"];
    115 [label="Attribute: l\nType: List\nLine: 118"];
    114 -> 115;
    116 [label="Method: iota\nReturn: List\nLine: 121"];
    117 [label="Formal: i\nType: Int\nLine: 121"];
    116 -> 117;
    118 [label="Block\nLine: 122"];
    119 [label="Assignment: l\nLine: 123"];
    120 [label="New: Nil\nLine: 123"];
    119 -> 120;
    118 -> 119;
    121 [label="Let\nLine: 124"];
    122 [label="LetDecl: j\nType: Int\nLine: 124"];
    123 [label="Int: 0\nLine: 124"];
    122 -> 123;
    121 -> 122;
    124 [label="While\nLine: 125"];
    125 [label="BinaryOp: <\nLine: 125"];
    126 [label="Id: j\nLine: 125"];
    127 [label="Id: i\nLine: 125"];
    125 -> 126;
    125 -> 127;
    128 [label="Block\nLine: 127"];
    129 [label="Assignment: l\nLine: 128"];
    130 [label="Dispatch: init\nLine: 128"];
    131 [label="New: Cons\nLine: 128"];
    130 -> 131;
    132 [label="Id: j\nLine: 128"];
    130 -> 132;
    133 [label="Id: l\nLine: 128"];
    130 -> 133;
    129 -> 130;
    128 -> 129;
    134 [label="Assignment: j\nLine: 129"];
    135 [label="BinaryOp: +\nLine: 129"];
    136 [label="Id: j\nLine: 129"];
    137 [label="Int: 1\nLine: 129"];
    135 -> 136;
    135 -> 137;
    134 -> 135;
    128 -> 134;
    124 -> 125;
    124 -> 128;
    121 -> 124;
    118 -> 121;
    138 [label="Id: l\nLine: 133"];
    118 -> 138;
    116 -> 118;
    114 -> 116;
    139 [label="Method: main\nReturn: Object\nLine: 137"];
    140 [label="Block\nLine: 138"];
    141 [label="MethodCall: out_string\nLine: 139"];
    142 [label="String: \"How many numbers to sort?\"\nLine: 139"];
    141 -> 142;
    140 -> 141;
    143 [label="Dispatch: print_list\nLine: 140"];
    144 [label="Dispatch: sort\nLine: 140"];
    145 [label="Dispatch: rev\nLine: 140"];
    146 [label="MethodCall: iota\nLine: 140"];
    147 [label="MethodCall: in_int\nLine: 140"];
    146 -> 147;
    145 -> 146;
    144 -> 145;
    143 -> 144;
    140 -> 143;
    139 -> 140;
    114 -> 139;
    0 -> 114;
}

