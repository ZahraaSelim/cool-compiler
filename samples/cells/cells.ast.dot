digraph AST {
    node [shape=box];
    0 [label="Program\nLine: 5"];
    1 [label="Class: CellularAutomaton\nInherits: IO\nLine: 5"];
    2 [label="Attribute: population_map\nType: String\nLine: 6"];
    1 -> 2;
    3 [label="Method: init\nReturn: SELF_TYPE\nLine: 8"];
    4 [label="Formal: map\nType: String\nLine: 8"];
    3 -> 4;
    5 [label="Block\nLine: 9"];
    6 [label="Assignment: population_map\nLine: 10"];
    7 [label="Id: map\nLine: 10"];
    6 -> 7;
    5 -> 6;
    8 [label="Id: self\nLine: 11"];
    5 -> 8;
    3 -> 5;
    1 -> 3;
    9 [label="Method: print\nReturn: SELF_TYPE\nLine: 15"];
    10 [label="Block\nLine: 16"];
    11 [label="MethodCall: out_string\nLine: 17"];
    12 [label="Dispatch: concat\nLine: 17"];
    13 [label="Id: population_map\nLine: 17"];
    12 -> 13;
    14 [label="String: \"\n\"\nLine: 17"];
    12 -> 14;
    11 -> 12;
    10 -> 11;
    15 [label="Id: self\nLine: 18"];
    10 -> 15;
    9 -> 10;
    1 -> 9;
    16 [label="Method: num_cells\nReturn: Int\nLine: 22"];
    17 [label="Dispatch: length\nLine: 23"];
    18 [label="Id: population_map\nLine: 23"];
    17 -> 18;
    16 -> 17;
    1 -> 16;
    19 [label="Method: cell\nReturn: String\nLine: 26"];
    20 [label="Formal: position\nType: Int\nLine: 26"];
    19 -> 20;
    21 [label="Dispatch: substr\nLine: 27"];
    22 [label="Id: population_map\nLine: 27"];
    21 -> 22;
    23 [label="Id: position\nLine: 27"];
    21 -> 23;
    24 [label="Int: 1\nLine: 27"];
    21 -> 24;
    19 -> 21;
    1 -> 19;
    25 [label="Method: cell_left_neighbor\nReturn: String\nLine: 30"];
    26 [label="Formal: position\nType: Int\nLine: 30"];
    25 -> 26;
    27 [label="IfElse\nLine: 31"];
    28 [label="BinaryOp: =\nLine: 31"];
    29 [label="Id: position\nLine: 31"];
    30 [label="Int: 0\nLine: 31"];
    28 -> 29;
    28 -> 30;
    31 [label="MethodCall: cell\nLine: 32"];
    32 [label="BinaryOp: -\nLine: 32"];
    33 [label="MethodCall: num_cells\nLine: 32"];
    34 [label="Int: 1\nLine: 32"];
    32 -> 33;
    32 -> 34;
    31 -> 32;
    35 [label="MethodCall: cell\nLine: 34"];
    36 [label="BinaryOp: -\nLine: 34"];
    37 [label="Id: position\nLine: 34"];
    38 [label="Int: 1\nLine: 34"];
    36 -> 37;
    36 -> 38;
    35 -> 36;
    27 -> 28;
    27 -> 31;
    27 -> 35;
    25 -> 27;
    1 -> 25;
    39 [label="Method: cell_right_neighbor\nReturn: String\nLine: 38"];
    40 [label="Formal: position\nType: Int\nLine: 38"];
    39 -> 40;
    41 [label="IfElse\nLine: 39"];
    42 [label="BinaryOp: =\nLine: 39"];
    43 [label="Id: position\nLine: 39"];
    44 [label="BinaryOp: -\nLine: 39"];
    45 [label="MethodCall: num_cells\nLine: 39"];
    46 [label="Int: 1\nLine: 39"];
    44 -> 45;
    44 -> 46;
    42 -> 43;
    42 -> 44;
    47 [label="MethodCall: cell\nLine: 40"];
    48 [label="Int: 0\nLine: 40"];
    47 -> 48;
    49 [label="MethodCall: cell\nLine: 42"];
    50 [label="BinaryOp: +\nLine: 42"];
    51 [label="Id: position\nLine: 42"];
    52 [label="Int: 1\nLine: 42"];
    50 -> 51;
    50 -> 52;
    49 -> 50;
    41 -> 42;
    41 -> 47;
    41 -> 49;
    39 -> 41;
    1 -> 39;
    53 [label="Method: cell_at_next_evolution\nReturn: String\nLine: 48"];
    54 [label="Formal: position\nType: Int\nLine: 48"];
    53 -> 54;
    55 [label="IfElse\nLine: 49"];
    56 [label="BinaryOp: =\nLine: 49"];
    57 [label="BinaryOp: +\nLine: 49"];
    58 [label="BinaryOp: +\nLine: 49"];
    59 [label="IfElse\nLine: 49"];
    60 [label="BinaryOp: =\nLine: 49"];
    61 [label="MethodCall: cell\nLine: 49"];
    62 [label="Id: position\nLine: 49"];
    61 -> 62;
    63 [label="String: \"X\"\nLine: 49"];
    60 -> 61;
    60 -> 63;
    64 [label="Int: 1\nLine: 49"];
    65 [label="Int: 0\nLine: 49"];
    59 -> 60;
    59 -> 64;
    59 -> 65;
    66 [label="IfElse\nLine: 50"];
    67 [label="BinaryOp: =\nLine: 50"];
    68 [label="MethodCall: cell_left_neighbor\nLine: 50"];
    69 [label="Id: position\nLine: 50"];
    68 -> 69;
    70 [label="String: \"X\"\nLine: 50"];
    67 -> 68;
    67 -> 70;
    71 [label="Int: 1\nLine: 50"];
    72 [label="Int: 0\nLine: 50"];
    66 -> 67;
    66 -> 71;
    66 -> 72;
    58 -> 59;
    58 -> 66;
    73 [label="IfElse\nLine: 51"];
    74 [label="BinaryOp: =\nLine: 51"];
    75 [label="MethodCall: cell_right_neighbor\nLine: 51"];
    76 [label="Id: position\nLine: 51"];
    75 -> 76;
    77 [label="String: \"X\"\nLine: 51"];
    74 -> 75;
    74 -> 77;
    78 [label="Int: 1\nLine: 51"];
    79 [label="Int: 0\nLine: 51"];
    73 -> 74;
    73 -> 78;
    73 -> 79;
    57 -> 58;
    57 -> 73;
    80 [label="Int: 1\nLine: 52"];
    56 -> 57;
    56 -> 80;
    81 [label="String: \"X\"\nLine: 54"];
    82 [label="String: \".\"\nLine: 56"];
    55 -> 56;
    55 -> 81;
    55 -> 82;
    53 -> 55;
    1 -> 53;
    83 [label="Method: evolve\nReturn: SELF_TYPE\nLine: 60"];
    84 [label="Let\nLine: 61"];
    85 [label="LetDecl: position\nType: Int\nLine: 61"];
    84 -> 85;
    86 [label="Let\nLine: 62"];
    87 [label="LetDecl: num\nType: Int\nLine: 62"];
    88 [label="MethodCall: num_cells\nLine: 62"];
    87 -> 88;
    86 -> 87;
    89 [label="Let\nLine: 63"];
    90 [label="LetDecl: temp\nType: String\nLine: 63"];
    89 -> 90;
    91 [label="Block\nLine: 64"];
    92 [label="While\nLine: 65"];
    93 [label="BinaryOp: <\nLine: 65"];
    94 [label="Id: position\nLine: 65"];
    95 [label="Id: num\nLine: 65"];
    93 -> 94;
    93 -> 95;
    96 [label="Block\nLine: 66"];
    97 [label="Assignment: temp\nLine: 67"];
    98 [label="Dispatch: concat\nLine: 67"];
    99 [label="Id: temp\nLine: 67"];
    98 -> 99;
    100 [label="MethodCall: cell_at_next_evolution\nLine: 67"];
    101 [label="Id: position\nLine: 67"];
    100 -> 101;
    98 -> 100;
    97 -> 98;
    96 -> 97;
    102 [label="Assignment: position\nLine: 68"];
    103 [label="BinaryOp: +\nLine: 68"];
    104 [label="Id: position\nLine: 68"];
    105 [label="Int: 1\nLine: 68"];
    103 -> 104;
    103 -> 105;
    102 -> 103;
    96 -> 102;
    92 -> 93;
    92 -> 96;
    91 -> 92;
    106 [label="Assignment: population_map\nLine: 71"];
    107 [label="Id: temp\nLine: 71"];
    106 -> 107;
    91 -> 106;
    108 [label="Id: self\nLine: 72"];
    91 -> 108;
    89 -> 91;
    86 -> 89;
    84 -> 86;
    83 -> 84;
    1 -> 83;
    0 -> 1;
    109 [label="Class: Main\nLine: 78"];
    110 [label="Attribute: cells\nType: CellularAutomaton\nLine: 79"];
    109 -> 110;
    111 [label="Method: main\nReturn: SELF_TYPE\nLine: 81"];
    112 [label="Block\nLine: 82"];
    113 [label="Assignment: cells\nLine: 83"];
    114 [label="Dispatch: init\nLine: 83"];
    115 [label="New: CellularAutomaton\nLine: 83"];
    114 -> 115;
    116 [label="String: \"         X         \"\nLine: 83"];
    114 -> 116;
    113 -> 114;
    112 -> 113;
    117 [label="Dispatch: print\nLine: 84"];
    118 [label="Id: cells\nLine: 84"];
    117 -> 118;
    112 -> 117;
    119 [label="Let\nLine: 85"];
    120 [label="LetDecl: countdown\nType: Int\nLine: 85"];
    121 [label="Int: 20\nLine: 85"];
    120 -> 121;
    119 -> 120;
    122 [label="While\nLine: 86"];
    123 [label="BinaryOp: <\nLine: 86"];
    124 [label="Int: 0\nLine: 86"];
    125 [label="Id: countdown\nLine: 86"];
    123 -> 124;
    123 -> 125;
    126 [label="Block\nLine: 87"];
    127 [label="Dispatch: evolve\nLine: 88"];
    128 [label="Id: cells\nLine: 88"];
    127 -> 128;
    126 -> 127;
    129 [label="Dispatch: print\nLine: 89"];
    130 [label="Id: cells\nLine: 89"];
    129 -> 130;
    126 -> 129;
    131 [label="Assignment: countdown\nLine: 90"];
    132 [label="BinaryOp: -\nLine: 90"];
    133 [label="Id: countdown\nLine: 90"];
    134 [label="Int: 1\nLine: 90"];
    132 -> 133;
    132 -> 134;
    131 -> 132;
    126 -> 131;
    122 -> 123;
    122 -> 126;
    119 -> 122;
    112 -> 119;
    135 [label="Id: self\nLine: 94"];
    112 -> 135;
    111 -> 112;
    109 -> 111;
    0 -> 109;
}

