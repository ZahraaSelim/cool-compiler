digraph AST {
    node [shape=box];
    0 [label="Program\nLine: 3"];
    1 [label="Class: Foo\nInherits: Bazz\nLine: 3"];
    2 [label="Attribute: a\nType: Razz\nLine: 4"];
    3 [label="Case\nLine: 4"];
    4 [label="Id: self\nLine: 4"];
    3 -> 4;
    5 [label="CaseBranch: n\nType: Razz\nLine: 5"];
    6 [label="New: Bar\nLine: 5"];
    5 -> 6;
    3 -> 5;
    7 [label="CaseBranch: n\nType: Foo\nLine: 6"];
    8 [label="New: Razz\nLine: 6"];
    7 -> 8;
    3 -> 7;
    9 [label="CaseBranch: n\nType: Bar\nLine: 7"];
    10 [label="Id: n\nLine: 7"];
    9 -> 10;
    3 -> 9;
    2 -> 3;
    1 -> 2;
    11 [label="Attribute: b\nType: Int\nLine: 10"];
    12 [label="BinaryOp: +\nLine: 10"];
    13 [label="BinaryOp: +\nLine: 10"];
    14 [label="BinaryOp: +\nLine: 10"];
    15 [label="Dispatch: doh\nLine: 10"];
    16 [label="Id: a\nLine: 10"];
    15 -> 16;
    17 [label="Dispatch: doh\nLine: 10"];
    18 [label="Id: g\nLine: 10"];
    17 -> 18;
    14 -> 15;
    14 -> 17;
    19 [label="MethodCall: doh\nLine: 10"];
    13 -> 14;
    13 -> 19;
    20 [label="MethodCall: printh\nLine: 10"];
    12 -> 13;
    12 -> 20;
    11 -> 12;
    1 -> 11;
    21 [label="Method: doh\nReturn: Int\nLine: 12"];
    22 [label="Let\nLine: 12"];
    23 [label="LetDecl: i\nType: Int\nLine: 12"];
    24 [label="Id: h\nLine: 12"];
    23 -> 24;
    22 -> 23;
    25 [label="Block\nLine: 12"];
    26 [label="Assignment: h\nLine: 12"];
    27 [label="BinaryOp: +\nLine: 12"];
    28 [label="Id: h\nLine: 12"];
    29 [label="Int: 2\nLine: 12"];
    27 -> 28;
    27 -> 29;
    26 -> 27;
    25 -> 26;
    30 [label="Id: i\nLine: 12"];
    25 -> 30;
    22 -> 25;
    21 -> 22;
    1 -> 21;
    0 -> 1;
    31 [label="Class: Bar\nInherits: Razz\nLine: 16"];
    32 [label="Attribute: c\nType: Int\nLine: 18"];
    33 [label="MethodCall: doh\nLine: 18"];
    32 -> 33;
    31 -> 32;
    34 [label="Attribute: d\nType: Object\nLine: 20"];
    35 [label="MethodCall: printh\nLine: 20"];
    34 -> 35;
    31 -> 34;
    0 -> 31;
    36 [label="Class: Razz\nInherits: Foo\nLine: 24"];
    37 [label="Attribute: e\nType: Bar\nLine: 26"];
    38 [label="Case\nLine: 26"];
    39 [label="Id: self\nLine: 26"];
    38 -> 39;
    40 [label="CaseBranch: n\nType: Razz\nLine: 27"];
    41 [label="New: Bar\nLine: 27"];
    40 -> 41;
    38 -> 40;
    42 [label="CaseBranch: n\nType: Bar\nLine: 28"];
    43 [label="Id: n\nLine: 28"];
    42 -> 43;
    38 -> 42;
    37 -> 38;
    36 -> 37;
    44 [label="Attribute: f\nType: Int\nLine: 31"];
    45 [label="BinaryOp: +\nLine: 31"];
    46 [label="BinaryOp: +\nLine: 31"];
    47 [label="BinaryOp: +\nLine: 31"];
    48 [label="BinaryOp: +\nLine: 31"];
    49 [label="Dispatch: doh\nType: Bazz\nLine: 31"];
    50 [label="Id: a\nLine: 31"];
    49 -> 50;
    51 [label="Dispatch: doh\nLine: 31"];
    52 [label="Id: g\nLine: 31"];
    51 -> 52;
    48 -> 49;
    48 -> 51;
    53 [label="Dispatch: doh\nLine: 31"];
    54 [label="Id: e\nLine: 31"];
    53 -> 54;
    47 -> 48;
    47 -> 53;
    55 [label="MethodCall: doh\nLine: 31"];
    46 -> 47;
    46 -> 55;
    56 [label="MethodCall: printh\nLine: 31"];
    45 -> 46;
    45 -> 56;
    44 -> 45;
    36 -> 44;
    0 -> 36;
    57 [label="Class: Bazz\nInherits: IO\nLine: 35"];
    58 [label="Attribute: h\nType: Int\nLine: 37"];
    59 [label="Int: 1\nLine: 37"];
    58 -> 59;
    57 -> 58;
    60 [label="Attribute: g\nType: Foo\nLine: 39"];
    61 [label="Case\nLine: 39"];
    62 [label="Id: self\nLine: 39"];
    61 -> 62;
    63 [label="CaseBranch: n\nType: Bazz\nLine: 40"];
    64 [label="New: Foo\nLine: 40"];
    63 -> 64;
    61 -> 63;
    65 [label="CaseBranch: n\nType: Razz\nLine: 41"];
    66 [label="New: Bar\nLine: 41"];
    65 -> 66;
    61 -> 65;
    67 [label="CaseBranch: n\nType: Foo\nLine: 42"];
    68 [label="New: Razz\nLine: 42"];
    67 -> 68;
    61 -> 67;
    69 [label="CaseBranch: n\nType: Bar\nLine: 43"];
    70 [label="Id: n\nLine: 43"];
    69 -> 70;
    61 -> 69;
    60 -> 61;
    57 -> 60;
    71 [label="Attribute: i\nType: Object\nLine: 46"];
    72 [label="MethodCall: printh\nLine: 46"];
    71 -> 72;
    57 -> 71;
    73 [label="Method: printh\nReturn: Int\nLine: 48"];
    74 [label="Block\nLine: 48"];
    75 [label="MethodCall: out_int\nLine: 48"];
    76 [label="Id: h\nLine: 48"];
    75 -> 76;
    74 -> 75;
    77 [label="Int: 0\nLine: 48"];
    74 -> 77;
    73 -> 74;
    57 -> 73;
    78 [label="Method: doh\nReturn: Int\nLine: 50"];
    79 [label="Let\nLine: 50"];
    80 [label="LetDecl: i\nType: Int\nLine: 50"];
    81 [label="Id: h\nLine: 50"];
    80 -> 81;
    79 -> 80;
    82 [label="Block\nLine: 50"];
    83 [label="Assignment: h\nLine: 50"];
    84 [label="BinaryOp: +\nLine: 50"];
    85 [label="Id: h\nLine: 50"];
    86 [label="Int: 1\nLine: 50"];
    84 -> 85;
    84 -> 86;
    83 -> 84;
    82 -> 83;
    87 [label="Id: i\nLine: 50"];
    82 -> 87;
    79 -> 82;
    78 -> 79;
    57 -> 78;
    0 -> 57;
    88 [label="Class: Main\nLine: 54"];
    89 [label="Attribute: a\nType: Bazz\nLine: 55"];
    90 [label="New: Bazz\nLine: 55"];
    89 -> 90;
    88 -> 89;
    91 [label="Attribute: b\nType: Foo\nLine: 56"];
    92 [label="New: Foo\nLine: 56"];
    91 -> 92;
    88 -> 91;
    93 [label="Attribute: c\nType: Razz\nLine: 57"];
    94 [label="New: Razz\nLine: 57"];
    93 -> 94;
    88 -> 93;
    95 [label="Attribute: d\nType: Bar\nLine: 58"];
    96 [label="New: Bar\nLine: 58"];
    95 -> 96;
    88 -> 95;
    97 [label="Method: main\nReturn: String\nLine: 60"];
    98 [label="String: \"do nothing\"\nLine: 60"];
    97 -> 98;
    88 -> 97;
    0 -> 88;
}

