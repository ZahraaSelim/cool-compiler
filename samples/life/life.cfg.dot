digraph CFG {
    node [shape=box, style=filled, fillcolor=lightgrey];
    subgraph "cluster_CellularAutomaton_southwest" {
        label="CellularAutomaton.southwest";
        color=blue;
    node0 [label="L_auto_0:\lparam position\lt163 = load board_size\lt164 = load columns\lt165 = position + t164\lt166 = t163 < t165\lif t166 goto L57\l"];
    node1 [label="L_auto_1:\lgoto L58\l"];
    node2 [label="L57:\lt167 = \" \"\lt168 = t167\lgoto L59\l"];
    node3 [label="L58:\lt169 = load columns\lt170 = position / t169\lt171 = load columns\lt172 = t170 * t171\lt173 = t172 = position\lif t173 goto L60\l"];
    node4 [label="L_auto_2:\lgoto L61\l"];
    node5 [label="L60:\lt174 = \" \"\lt175 = t174\lgoto L62\l"];
    node6 [label="L61:\lt176 = 1\lt177 = position - t176\lt178 = call CellularAutomaton.south(t177)\lt175 = t178\l"];
    node7 [label="L62:\lt168 = t175\l"];
    node8 [label="L59:\lreturn t168\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node6;
    node2 -> node3;
    node3 -> node3;
    node3 -> node5;
    node3 -> node4;
    node4 -> node4;
    node4 -> node5;
    node5 -> node6;
    node5 -> node5;
    node6 -> node6;
    node6 -> node7;
    }
    subgraph "cluster_CellularAutomaton_init" {
        label="CellularAutomaton.init";
        color=blue;
    node0 [label="L_auto_3:\lparam map\lstore map -> population_map\lt34 = call CellularAutomaton.board_init(map)\lreturn self\l"];
    node0 -> node0;
    }
    subgraph "cluster_CellularAutomaton_south" {
        label="CellularAutomaton.south";
        color=blue;
    node0 [label="L_auto_4:\lparam position\lt70 = load board_size\lt71 = load columns\lt72 = position + t71\lt73 = t70 < t72\lif t73 goto L27\l"];
    node1 [label="L_auto_5:\lgoto L28\l"];
    node2 [label="L27:\lt74 = \" \"\lt75 = t74\lgoto L29\l"];
    node3 [label="L28:\lt76 = load columns\lt77 = position + t76\lt78 = call CellularAutomaton.cell(t77)\lt75 = t78\l"];
    node4 [label="L29:\lreturn t75\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node3;
    node3 -> node3;
    }
    subgraph "cluster_CellularAutomaton_north" {
        label="CellularAutomaton.north";
        color=blue;
    node0 [label="L_auto_6:\lparam position\lt61 = load columns\lt62 = position - t61\lt63 = 0\lt64 = t62 < t63\lif t64 goto L24\l"];
    node1 [label="L_auto_7:\lgoto L25\l"];
    node2 [label="L24:\lt65 = \" \"\lt66 = t65\lgoto L26\l"];
    node3 [label="L25:\lt67 = load columns\lt68 = position - t67\lt69 = call CellularAutomaton.cell(t68)\lt66 = t69\l"];
    node4 [label="L26:\lreturn t66\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node3;
    node3 -> node3;
    }
    subgraph "cluster_CellularAutomaton_northwest" {
        label="CellularAutomaton.northwest";
        color=blue;
    node0 [label="L_auto_8:\lparam position\lt107 = load columns\lt108 = position - t107\lt109 = 0\lt110 = t108 < t109\lif t110 goto L39\l"];
    node1 [label="L_auto_9:\lgoto L40\l"];
    node2 [label="L39:\lt111 = \" \"\lt112 = t111\lgoto L41\l"];
    node3 [label="L40:\lt113 = load columns\lt114 = position / t113\lt115 = load columns\lt116 = t114 * t115\lt117 = t116 = position\lif t117 goto L42\l"];
    node4 [label="L_auto_10:\lgoto L43\l"];
    node5 [label="L42:\lt118 = \" \"\lt119 = t118\lgoto L44\l"];
    node6 [label="L43:\lt120 = 1\lt121 = position - t120\lt122 = call CellularAutomaton.north(t121)\lt119 = t122\l"];
    node7 [label="L44:\lt112 = t119\l"];
    node8 [label="L41:\lreturn t112\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node6;
    node2 -> node3;
    node3 -> node3;
    node3 -> node5;
    node3 -> node4;
    node4 -> node4;
    node4 -> node5;
    node5 -> node6;
    node5 -> node5;
    node6 -> node6;
    node6 -> node7;
    }
    subgraph "cluster_CellularAutomaton_northeast" {
        label="CellularAutomaton.northeast";
        color=blue;
    node0 [label="L_auto_11:\lparam position\lt123 = load columns\lt124 = position - t123\lt125 = 0\lt126 = t124 < t125\lif t126 goto L45\l"];
    node1 [label="L_auto_12:\lgoto L46\l"];
    node2 [label="L45:\lt127 = \" \"\lt128 = t127\lgoto L47\l"];
    node3 [label="L46:\lt129 = 1\lt130 = position + t129\lt131 = load columns\lt132 = t130 / t131\lt133 = load columns\lt134 = t132 * t133\lt135 = 1\lt136 = position + t135\lt137 = t134 = t136\lif t137 goto L48\l"];
    node4 [label="L_auto_13:\lgoto L49\l"];
    node5 [label="L48:\lt138 = \" \"\lt139 = t138\lgoto L50\l"];
    node6 [label="L49:\lt140 = 1\lt141 = position + t140\lt142 = call CellularAutomaton.north(t141)\lt139 = t142\l"];
    node7 [label="L50:\lt128 = t139\l"];
    node8 [label="L47:\lreturn t128\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node6;
    node2 -> node3;
    node3 -> node3;
    node3 -> node5;
    node3 -> node4;
    node4 -> node4;
    node4 -> node5;
    node5 -> node6;
    node5 -> node5;
    node6 -> node6;
    node6 -> node7;
    }
    subgraph "cluster_CellularAutomaton_cell" {
        label="CellularAutomaton.cell";
        color=blue;
    node0 [label="L_auto_14:\lparam position\lt52 = load board_size\lt53 = 1\lt54 = t52 - t53\lt55 = t54 < position\lif t55 goto L21\l"];
    node1 [label="L_auto_15:\lgoto L22\l"];
    node2 [label="L21:\lt56 = \" \"\lt57 = t56\lgoto L23\l"];
    node3 [label="L22:\lt58 = load population_map\lt59 = 1\lt60 = call substr(position, t59)\lt57 = t60\l"];
    node4 [label="L23:\lreturn t57\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node3;
    node3 -> node3;
    }
    subgraph "cluster_CellularAutomaton_cell_at_next_evolution" {
        label="CellularAutomaton.cell_at_next_evolution";
        color=blue;
    node0 [label="L_auto_16:\lparam position\lt234 = call CellularAutomaton.neighbors(position)\lt235 = 3\lt236 = t234 = t235\lif t236 goto L87\l"];
    node1 [label="L_auto_17:\lgoto L88\l"];
    node2 [label="L87:\lt237 = \"X\"\lt238 = t237\lgoto L89\l"];
    node3 [label="L88:\lt239 = call CellularAutomaton.neighbors(position)\lt240 = 2\lt241 = t239 = t240\lif t241 goto L90\l"];
    node4 [label="L_auto_18:\lgoto L91\l"];
    node5 [label="L90:\lt242 = call CellularAutomaton.cell(position)\lt243 = \"X\"\lt244 = t242 = t243\lif t244 goto L93\l"];
    node6 [label="L_auto_19:\lgoto L94\l"];
    node7 [label="L93:\lt245 = \"X\"\lt246 = t245\lgoto L95\l"];
    node8 [label="L94:\lt247 = \"-\"\lt246 = t247\l"];
    node9 [label="L95:\lt248 = t246\lgoto L92\l"];
    node10 [label="L91:\lt249 = \"-\"\lt248 = t249\l"];
    node11 [label="L92:\lt238 = t248\l"];
    node12 [label="L89:\lreturn t238\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node10;
    node2 -> node3;
    node3 -> node3;
    node3 -> node8;
    node3 -> node4;
    node4 -> node4;
    node4 -> node5;
    node5 -> node5;
    node5 -> node7;
    node5 -> node6;
    node6 -> node6;
    node6 -> node7;
    node7 -> node7;
    node7 -> node8;
    node8 -> node8;
    node8 -> node9;
    node9 -> node9;
    node9 -> node10;
    node10 -> node10;
    }
    subgraph "cluster_CellularAutomaton_num_cells" {
        label="CellularAutomaton.num_cells";
        color=blue;
    node0 [label="L_auto_20:\lt50 = load population_map\lt51 = call length()\lreturn t51\l"];
    node0 -> node0;
    }
    subgraph "cluster_CellularAutomaton_evolve" {
        label="CellularAutomaton.evolve";
        color=blue;
    node0 [label="L_auto_21:\lt250 = 0\lposition = t250\lt251 = call CellularAutomaton.num_cells()\lnum = t251\l"];
    node1 [label="L96:\lt252 = position < num\lif t252 goto L97\l"];
    node2 [label="L_auto_22:\lgoto L98\l"];
    node3 [label="L97:\lt253 = call CellularAutomaton.cell_at_next_evolution(position)\lt254 = call concat(t253)\ltemp = t254\lt255 = 1\lt256 = position + t255\lposition = t256\lgoto L96\l"];
    node4 [label="L98:\lstore temp -> population_map\lreturn self\l"];
    node0 -> node0;
    node0 -> node1;
    node1 -> node1;
    node1 -> node2;
    node1 -> node3;
    node2 -> node2;
    node2 -> node3;
    node3 -> node3;
    node3 -> node0;
    node3 -> node4;
    }
    subgraph "cluster_CellularAutomaton_print" {
        label="CellularAutomaton.print";
        color=blue;
    node0 [label="L_auto_23:\lt35 = 0\li = t35\lt36 = load board_size\lnum = t36\lt37 = \"\n\"\lt38 = call CellularAutomaton.out_string(t37)\l"];
    node1 [label="L18:\lt39 = i < num\lif t39 goto L19\l"];
    node2 [label="L_auto_24:\lgoto L20\l"];
    node3 [label="L19:\lt40 = load population_map\lt41 = load columns\lt42 = call substr(i, t41)\lt43 = call CellularAutomaton.out_string(t42)\lt44 = \"\n\"\lt45 = call CellularAutomaton.out_string(t44)\lt46 = load columns\lt47 = i + t46\li = t47\lgoto L18\l"];
    node4 [label="L20:\lt48 = \"\n\"\lt49 = call CellularAutomaton.out_string(t48)\lreturn self\l"];
    node0 -> node0;
    node0 -> node1;
    node1 -> node1;
    node1 -> node2;
    node1 -> node3;
    node2 -> node2;
    node2 -> node3;
    node3 -> node3;
    node3 -> node0;
    node3 -> node4;
    node4 -> node4;
    }
    subgraph "cluster_CellularAutomaton_east" {
        label="CellularAutomaton.east";
        color=blue;
    node0 [label="L_auto_25:\lparam position\lt79 = 1\lt80 = position + t79\lt81 = load columns\lt82 = t80 / t81\lt83 = load columns\lt84 = t82 * t83\lt85 = 1\lt86 = position + t85\lt87 = t84 = t86\lif t87 goto L30\l"];
    node1 [label="L_auto_26:\lgoto L31\l"];
    node2 [label="L30:\lt88 = \" \"\lt89 = t88\lgoto L32\l"];
    node3 [label="L31:\lt90 = 1\lt91 = position + t90\lt92 = call CellularAutomaton.cell(t91)\lt89 = t92\l"];
    node4 [label="L32:\lreturn t89\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node3;
    node3 -> node3;
    }
    subgraph "cluster_CellularAutomaton_neighbors" {
        label="CellularAutomaton.neighbors";
        color=blue;
    node0 [label="L_auto_27:\lparam position\lt179 = call CellularAutomaton.north(position)\lt180 = \"X\"\lt181 = t179 = t180\lif t181 goto L63\l"];
    node1 [label="L_auto_28:\lgoto L64\l"];
    node2 [label="L63:\lt182 = 1\lt183 = t182\lgoto L65\l"];
    node3 [label="L64:\lt184 = 0\lt183 = t184\l"];
    node4 [label="L65:\lt185 = call CellularAutomaton.south(position)\lt186 = \"X\"\lt187 = t185 = t186\lif t187 goto L66\l"];
    node5 [label="L_auto_29:\lgoto L67\l"];
    node6 [label="L66:\lt188 = 1\lt189 = t188\lgoto L68\l"];
    node7 [label="L67:\lt190 = 0\lt189 = t190\l"];
    node8 [label="L68:\lt191 = t183 + t189\lt192 = call CellularAutomaton.east(position)\lt193 = \"X\"\lt194 = t192 = t193\lif t194 goto L69\l"];
    node9 [label="L_auto_30:\lgoto L70\l"];
    node10 [label="L69:\lt195 = 1\lt196 = t195\lgoto L71\l"];
    node11 [label="L70:\lt197 = 0\lt196 = t197\l"];
    node12 [label="L71:\lt198 = t191 + t196\lt199 = call CellularAutomaton.west(position)\lt200 = \"X\"\lt201 = t199 = t200\lif t201 goto L72\l"];
    node13 [label="L_auto_31:\lgoto L73\l"];
    node14 [label="L72:\lt202 = 1\lt203 = t202\lgoto L74\l"];
    node15 [label="L73:\lt204 = 0\lt203 = t204\l"];
    node16 [label="L74:\lt205 = t198 + t203\lt206 = call CellularAutomaton.northeast(position)\lt207 = \"X\"\lt208 = t206 = t207\lif t208 goto L75\l"];
    node17 [label="L_auto_32:\lgoto L76\l"];
    node18 [label="L75:\lt209 = 1\lt210 = t209\lgoto L77\l"];
    node19 [label="L76:\lt211 = 0\lt210 = t211\l"];
    node20 [label="L77:\lt212 = t205 + t210\lt213 = call CellularAutomaton.northwest(position)\lt214 = \"X\"\lt215 = t213 = t214\lif t215 goto L78\l"];
    node21 [label="L_auto_33:\lgoto L79\l"];
    node22 [label="L78:\lt216 = 1\lt217 = t216\lgoto L80\l"];
    node23 [label="L79:\lt218 = 0\lt217 = t218\l"];
    node24 [label="L80:\lt219 = t212 + t217\lt220 = call CellularAutomaton.southeast(position)\lt221 = \"X\"\lt222 = t220 = t221\lif t222 goto L81\l"];
    node25 [label="L_auto_34:\lgoto L82\l"];
    node26 [label="L81:\lt223 = 1\lt224 = t223\lgoto L83\l"];
    node27 [label="L82:\lt225 = 0\lt224 = t225\l"];
    node28 [label="L83:\lt226 = t219 + t224\lt227 = call CellularAutomaton.southwest(position)\lt228 = \"X\"\lt229 = t227 = t228\lif t229 goto L84\l"];
    node29 [label="L_auto_35:\lgoto L85\l"];
    node30 [label="L84:\lt230 = 1\lt231 = t230\lgoto L86\l"];
    node31 [label="L85:\lt232 = 0\lt231 = t232\l"];
    node32 [label="L86:\lt233 = t226 + t231\lreturn t233\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node3;
    node3 -> node3;
    node3 -> node4;
    node4 -> node4;
    node4 -> node6;
    node4 -> node5;
    node5 -> node5;
    node5 -> node6;
    node6 -> node7;
    node6 -> node6;
    node7 -> node7;
    node7 -> node8;
    node8 -> node8;
    node8 -> node10;
    node8 -> node9;
    node9 -> node9;
    node9 -> node10;
    node10 -> node10;
    node10 -> node11;
    node11 -> node11;
    node11 -> node12;
    node12 -> node12;
    node12 -> node13;
    node13 -> node14;
    node14 -> node14;
    node14 -> node15;
    node15 -> node15;
    node15 -> node16;
    node16 -> node16;
    node16 -> node17;
    node16 -> node18;
    node17 -> node17;
    node17 -> node18;
    node18 -> node18;
    node18 -> node19;
    node19 -> node19;
    node19 -> node20;
    node20 -> node20;
    node20 -> node22;
    node20 -> node21;
    node21 -> node21;
    node21 -> node22;
    node22 -> node22;
    node22 -> node23;
    node23 -> node23;
    node23 -> node24;
    node24 -> node24;
    node24 -> node25;
    node25 -> node25;
    node25 -> node26;
    node26 -> node26;
    node26 -> node27;
    node27 -> node27;
    node27 -> node28;
    node28 -> node28;
    node28 -> node29;
    node29 -> node29;
    node29 -> node30;
    }
    subgraph "cluster_CellularAutomaton_west" {
        label="CellularAutomaton.west";
        color=blue;
    node0 [label="L_auto_36:\lparam position\lt93 = 0\lt94 = position = t93\lif t94 goto L33\l"];
    node1 [label="L_auto_37:\lgoto L34\l"];
    node2 [label="L33:\lt95 = \" \"\lt96 = t95\lgoto L35\l"];
    node3 [label="L34:\lt97 = load columns\lt98 = position / t97\lt99 = load columns\lt100 = t98 * t99\lt101 = t100 = position\lif t101 goto L36\l"];
    node4 [label="L_auto_38:\lgoto L37\l"];
    node5 [label="L36:\lt102 = \" \"\lt103 = t102\lgoto L38\l"];
    node6 [label="L37:\lt104 = 1\lt105 = position - t104\lt106 = call CellularAutomaton.cell(t105)\lt103 = t106\l"];
    node7 [label="L38:\lt96 = t103\l"];
    node8 [label="L35:\lreturn t96\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node6;
    node2 -> node3;
    node3 -> node3;
    node3 -> node5;
    node3 -> node4;
    node4 -> node4;
    node4 -> node5;
    node5 -> node6;
    node5 -> node5;
    node6 -> node6;
    node6 -> node7;
    }
    subgraph "cluster_CellularAutomaton_prompt" {
        label="CellularAutomaton.prompt";
        color=blue;
    node0 [label="L_auto_39:\lt391 = \"Would you like to continue with the next generation? \n\"\lt392 = call CellularAutomaton.out_string(t391)\lt393 = \"Please use lowercase y or n for your answer [y]: \"\lt394 = call CellularAutomaton.out_string(t393)\lt395 = call CellularAutomaton.in_string()\lans = t395\lt396 = \"\n\"\lt397 = call CellularAutomaton.out_string(t396)\lt398 = \"n\"\lt399 = ans = t398\lif t399 goto L162\l"];
    node1 [label="L_auto_40:\lgoto L163\l"];
    node2 [label="L162:\lt400 = false\lt401 = t400\lgoto L164\l"];
    node3 [label="L163:\lt402 = true\lt401 = t402\l"];
    node4 [label="L164:\lreturn t401\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node3;
    node3 -> node3;
    }
    subgraph "cluster_CellularAutomaton_southeast" {
        label="CellularAutomaton.southeast";
        color=blue;
    node0 [label="L_auto_41:\lparam position\lt143 = load board_size\lt144 = load columns\lt145 = position + t144\lt146 = t143 < t145\lif t146 goto L51\l"];
    node1 [label="L_auto_42:\lgoto L52\l"];
    node2 [label="L51:\lt147 = \" \"\lt148 = t147\lgoto L53\l"];
    node3 [label="L52:\lt149 = 1\lt150 = position + t149\lt151 = load columns\lt152 = t150 / t151\lt153 = load columns\lt154 = t152 * t153\lt155 = 1\lt156 = position + t155\lt157 = t154 = t156\lif t157 goto L54\l"];
    node4 [label="L_auto_43:\lgoto L55\l"];
    node5 [label="L54:\lt158 = \" \"\lt159 = t158\lgoto L56\l"];
    node6 [label="L55:\lt160 = 1\lt161 = position + t160\lt162 = call CellularAutomaton.south(t161)\lt159 = t162\l"];
    node7 [label="L56:\lt148 = t159\l"];
    node8 [label="L53:\lreturn t148\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node6;
    node2 -> node3;
    node3 -> node3;
    node3 -> node5;
    node3 -> node4;
    node4 -> node4;
    node4 -> node5;
    node5 -> node6;
    node5 -> node5;
    node6 -> node6;
    node6 -> node7;
    }
    subgraph "cluster_CellularAutomaton_option" {
        label="CellularAutomaton.option";
        color=blue;
    node0 [label="L_auto_44:\lt257 = \"\nPlease chose a number:\n\"\lt258 = call CellularAutomaton.out_string(t257)\lt259 = \"\t1: A cross\n\"\lt260 = call CellularAutomaton.out_string(t259)\lt261 = \"\t2: A slash from the upper left to lower right\n\"\lt262 = call CellularAutomaton.out_string(t261)\lt263 = \"\t3: A slash from the upper right to lower left\n\"\lt264 = call CellularAutomaton.out_string(t263)\lt265 = \"\t4: An X\n\"\lt266 = call CellularAutomaton.out_string(t265)\lt267 = \"\t5: A greater than sign \n\"\lt268 = call CellularAutomaton.out_string(t267)\lt269 = \"\t6: A less than sign\n\"\lt270 = call CellularAutomaton.out_string(t269)\lt271 = \"\t7: Two greater than signs\n\"\lt272 = call CellularAutomaton.out_string(t271)\lt273 = \"\t8: Two less than signs\n\"\lt274 = call CellularAutomaton.out_string(t273)\lt275 = \"\t9: A 'V'\n\"\lt276 = call CellularAutomaton.out_string(t275)\lt277 = \"\t10: An inverse 'V'\n\"\lt278 = call CellularAutomaton.out_string(t277)\lt279 = \"\t11: Numbers 9 and 10 combined\n\"\lt280 = call CellularAutomaton.out_string(t279)\lt281 = \"\t12: A full grid\n\"\lt282 = call CellularAutomaton.out_string(t281)\lt283 = \"\t13: A 'T'\n\"\lt284 = call CellularAutomaton.out_string(t283)\lt285 = \"\t14: A plus '+'\n\"\lt286 = call CellularAutomaton.out_string(t285)\lt287 = \"\t15: A 'W'\n\"\lt288 = call CellularAutomaton.out_string(t287)\lt289 = \"\t16: An 'M'\n\"\lt290 = call CellularAutomaton.out_string(t289)\lt291 = \"\t17: An 'E'\n\"\lt292 = call CellularAutomaton.out_string(t291)\lt293 = \"\t18: A '3'\n\"\lt294 = call CellularAutomaton.out_string(t293)\lt295 = \"\t19: An 'O'\n\"\lt296 = call CellularAutomaton.out_string(t295)\lt297 = \"\t20: An '8'\n\"\lt298 = call CellularAutomaton.out_string(t297)\lt299 = \"\t21: An 'S'\n\"\lt300 = call CellularAutomaton.out_string(t299)\lt301 = \"Your choice => \"\lt302 = call CellularAutomaton.out_string(t301)\lt303 = call CellularAutomaton.in_int()\lnum = t303\lt304 = \"\n\"\lt305 = call CellularAutomaton.out_string(t304)\lt306 = 1\lt307 = num = t306\lif t307 goto L99\l"];
    node1 [label="L_auto_45:\lgoto L100\l"];
    node2 [label="L99:\lt308 = \" XX  XXXX XXXX  XX  \"\lt309 = t308\lgoto L101\l"];
    node3 [label="L100:\lt310 = 2\lt311 = num = t310\lif t311 goto L102\l"];
    node4 [label="L_auto_46:\lgoto L103\l"];
    node5 [label="L102:\lt312 = \"    X   X   X   X   X    \"\lt313 = t312\lgoto L104\l"];
    node6 [label="L103:\lt314 = 3\lt315 = num = t314\lif t315 goto L105\l"];
    node7 [label="L_auto_47:\lgoto L106\l"];
    node8 [label="L105:\lt316 = \"X     X     X     X     X\"\lt317 = t316\lgoto L107\l"];
    node9 [label="L106:\lt318 = 4\lt319 = num = t318\lif t319 goto L108\l"];
    node10 [label="L_auto_48:\lgoto L109\l"];
    node11 [label="L108:\lt320 = \"X   X X X   X   X X X   X\"\lt321 = t320\lgoto L110\l"];
    node12 [label="L109:\lt322 = 5\lt323 = num = t322\lif t323 goto L111\l"];
    node13 [label="L_auto_49:\lgoto L112\l"];
    node14 [label="L111:\lt324 = \"X     X     X   X   X    \"\lt325 = t324\lgoto L113\l"];
    node15 [label="L112:\lt326 = 6\lt327 = num = t326\lif t327 goto L114\l"];
    node16 [label="L_auto_50:\lgoto L115\l"];
    node17 [label="L114:\lt328 = \"    X   X   X     X     X\"\lt329 = t328\lgoto L116\l"];
    node18 [label="L115:\lt330 = 7\lt331 = num = t330\lif t331 goto L117\l"];
    node19 [label="L_auto_51:\lgoto L118\l"];
    node20 [label="L117:\lt332 = \"X  X  X  XX  X      \"\lt333 = t332\lgoto L119\l"];
    node21 [label="L118:\lt334 = 8\lt335 = num = t334\lif t335 goto L120\l"];
    node22 [label="L_auto_52:\lgoto L121\l"];
    node23 [label="L120:\lt336 = \" X  XX  X  X  X     \"\lt337 = t336\lgoto L122\l"];
    node24 [label="L121:\lt338 = 9\lt339 = num = t338\lif t339 goto L123\l"];
    node25 [label="L_auto_53:\lgoto L124\l"];
    node26 [label="L123:\lt340 = \"X   X X X   X  \"\lt341 = t340\lgoto L125\l"];
    node27 [label="L124:\lt342 = 10\lt343 = num = t342\lif t343 goto L126\l"];
    node28 [label="L_auto_54:\lgoto L127\l"];
    node29 [label="L126:\lt344 = \"  X   X X X   X\"\lt345 = t344\lgoto L128\l"];
    node30 [label="L127:\lt346 = 11\lt347 = num = t346\lif t347 goto L129\l"];
    node31 [label="L_auto_55:\lgoto L130\l"];
    node32 [label="L129:\lt348 = \"X X X X X X X X\"\lt349 = t348\lgoto L131\l"];
    node33 [label="L130:\lt350 = 12\lt351 = num = t350\lif t351 goto L132\l"];
    node34 [label="L_auto_56:\lgoto L133\l"];
    node35 [label="L132:\lt352 = \"XXXXXXXXXXXXXXXXXXXXXXXXX\"\lt353 = t352\lgoto L134\l"];
    node36 [label="L133:\lt354 = 13\lt355 = num = t354\lif t355 goto L135\l"];
    node37 [label="L_auto_57:\lgoto L136\l"];
    node38 [label="L135:\lt356 = \"XXXXX  X    X    X    X  \"\lt357 = t356\lgoto L137\l"];
    node39 [label="L136:\lt358 = 14\lt359 = num = t358\lif t359 goto L138\l"];
    node40 [label="L_auto_58:\lgoto L139\l"];
    node41 [label="L138:\lt360 = \"  X    X  XXXXX  X    X  \"\lt361 = t360\lgoto L140\l"];
    node42 [label="L139:\lt362 = 15\lt363 = num = t362\lif t363 goto L141\l"];
    node43 [label="L_auto_59:\lgoto L142\l"];
    node44 [label="L141:\lt364 = \"X     X X X X   X X  \"\lt365 = t364\lgoto L143\l"];
    node45 [label="L142:\lt366 = 16\lt367 = num = t366\lif t367 goto L144\l"];
    node46 [label="L_auto_60:\lgoto L145\l"];
    node47 [label="L144:\lt368 = \"  X X   X X X X     X\"\lt369 = t368\lgoto L146\l"];
    node48 [label="L145:\lt370 = 17\lt371 = num = t370\lif t371 goto L147\l"];
    node49 [label="L_auto_61:\lgoto L148\l"];
    node50 [label="L147:\lt372 = \"XXXXX   X   XXXXX   X   XXXX\"\lt373 = t372\lgoto L149\l"];
    node51 [label="L148:\lt374 = 18\lt375 = num = t374\lif t375 goto L150\l"];
    node52 [label="L_auto_62:\lgoto L151\l"];
    node53 [label="L150:\lt376 = \"XXX    X   X  X    X   XXXX \"\lt377 = t376\lgoto L152\l"];
    node54 [label="L151:\lt378 = 19\lt379 = num = t378\lif t379 goto L153\l"];
    node55 [label="L_auto_63:\lgoto L154\l"];
    node56 [label="L153:\lt380 = \" XX X  XX  X XX \"\lt381 = t380\lgoto L155\l"];
    node57 [label="L154:\lt382 = 20\lt383 = num = t382\lif t383 goto L156\l"];
    node58 [label="L_auto_64:\lgoto L157\l"];
    node59 [label="L156:\lt384 = \" XX X  XX  X XX X  XX  X XX \"\lt385 = t384\lgoto L158\l"];
    node60 [label="L157:\lt386 = 21\lt387 = num = t386\lif t387 goto L159\l"];
    node61 [label="L_auto_65:\lgoto L160\l"];
    node62 [label="L159:\lt388 = \" XXXX   X    XX    X   XXXX \"\lt389 = t388\lgoto L161\l"];
    node63 [label="L160:\lt390 = \"                         \"\lt389 = t390\l"];
    node64 [label="L161:\lt385 = t389\l"];
    node65 [label="L158:\lt381 = t385\l"];
    node66 [label="L155:\lt377 = t381\l"];
    node67 [label="L152:\lt373 = t377\l"];
    node68 [label="L149:\lt369 = t373\l"];
    node69 [label="L146:\lt365 = t369\l"];
    node70 [label="L143:\lt361 = t365\l"];
    node71 [label="L140:\lt357 = t361\l"];
    node72 [label="L137:\lt353 = t357\l"];
    node73 [label="L134:\lt349 = t353\l"];
    node74 [label="L131:\lt345 = t349\l"];
    node75 [label="L128:\lt341 = t345\l"];
    node76 [label="L125:\lt337 = t341\l"];
    node77 [label="L122:\lt333 = t337\l"];
    node78 [label="L119:\lt329 = t333\l"];
    node79 [label="L116:\lt325 = t329\l"];
    node80 [label="L113:\lt321 = t325\l"];
    node81 [label="L110:\lt317 = t321\l"];
    node82 [label="L107:\lt313 = t317\l"];
    node83 [label="L104:\lt309 = t313\l"];
    node84 [label="L101:\lreturn t309\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node73;
    node2 -> node3;
    node3 -> node3;
    node3 -> node5;
    node3 -> node4;
    node4 -> node4;
    node4 -> node5;
    node5 -> node72;
    node5 -> node5;
    node5 -> node6;
    node6 -> node6;
    node6 -> node8;
    node6 -> node7;
    node7 -> node7;
    node7 -> node71;
    node8 -> node8;
    node8 -> node9;
    node9 -> node10;
    node9 -> node9;
    node10 -> node70;
    node10 -> node11;
    node11 -> node11;
    node11 -> node12;
    node11 -> node13;
    node12 -> node12;
    node12 -> node69;
    node13 -> node13;
    node13 -> node14;
    node14 -> node14;
    node14 -> node15;
    node15 -> node15;
    node15 -> node68;
    node15 -> node16;
    node16 -> node16;
    node16 -> node17;
    node17 -> node17;
    node17 -> node18;
    node18 -> node18;
    node18 -> node67;
    node18 -> node19;
    node19 -> node19;
    node19 -> node20;
    node20 -> node21;
    node20 -> node20;
    node21 -> node66;
    node21 -> node21;
    node21 -> node22;
    node22 -> node22;
    node22 -> node23;
    node22 -> node24;
    node23 -> node23;
    node23 -> node65;
    node24 -> node24;
    node24 -> node25;
    node25 -> node26;
    node26 -> node26;
    node26 -> node64;
    node26 -> node27;
    node27 -> node27;
    node27 -> node28;
    node27 -> node29;
    node28 -> node28;
    node28 -> node29;
    node29 -> node29;
    node29 -> node63;
    node29 -> node30;
    node30 -> node30;
    node30 -> node32;
    node30 -> node31;
    node31 -> node31;
    node31 -> node32;
    node32 -> node62;
    node32 -> node32;
    node32 -> node33;
    node33 -> node33;
    node33 -> node35;
    node33 -> node34;
    node34 -> node34;
    node34 -> node62;
    node35 -> node35;
    node35 -> node36;
    node36 -> node37;
    node36 -> node36;
    node37 -> node61;
    node37 -> node38;
    node38 -> node38;
    node38 -> node39;
    node38 -> node40;
    node39 -> node39;
    node39 -> node60;
    node40 -> node40;
    node40 -> node41;
    node41 -> node41;
    node41 -> node42;
    node42 -> node42;
    node42 -> node60;
    node42 -> node43;
    node43 -> node43;
    node43 -> node44;
    node44 -> node44;
    node44 -> node45;
    node45 -> node45;
    node45 -> node59;
    node45 -> node46;
    node46 -> node46;
    node46 -> node47;
    node47 -> node48;
    node47 -> node47;
    node48 -> node59;
    node48 -> node48;
    node48 -> node49;
    node49 -> node49;
    node49 -> node50;
    node49 -> node51;
    node50 -> node50;
    node50 -> node58;
    node51 -> node51;
    node51 -> node52;
    node52 -> node53;
    node53 -> node53;
    node53 -> node57;
    node53 -> node54;
    node54 -> node54;
    node54 -> node55;
    node54 -> node56;
    node55 -> node55;
    node55 -> node56;
    node56 -> node56;
    node56 -> node57;
    node57 -> node57;
    node57 -> node58;
    node58 -> node58;
    node58 -> node59;
    node59 -> node59;
    node59 -> node60;
    node60 -> node60;
    node60 -> node61;
    node61 -> node61;
    node61 -> node62;
    node62 -> node62;
    node62 -> node63;
    node63 -> node63;
    node63 -> node64;
    node64 -> node64;
    node64 -> node65;
    node65 -> node65;
    node65 -> node66;
    node66 -> node66;
    node66 -> node67;
    node67 -> node67;
    node67 -> node68;
    node68 -> node68;
    node68 -> node69;
    node69 -> node69;
    node69 -> node70;
    node70 -> node70;
    node70 -> node71;
    node71 -> node71;
    node71 -> node72;
    node72 -> node72;
    node72 -> node73;
    node73 -> node73;
    }
    subgraph "cluster_CellularAutomaton_prompt2" {
        label="CellularAutomaton.prompt2";
        color=blue;
    node0 [label="L_auto_66:\lt403 = \"\n\n\"\lt404 = call CellularAutomaton.out_string(t403)\lt405 = \"Would you like to choose a background pattern? \n\"\lt406 = call CellularAutomaton.out_string(t405)\lt407 = \"Please use lowercase y or n for your answer [n]: \"\lt408 = call CellularAutomaton.out_string(t407)\lt409 = call CellularAutomaton.in_string()\lans = t409\lt410 = \"y\"\lt411 = ans = t410\lif t411 goto L165\l"];
    node1 [label="L_auto_67:\lgoto L166\l"];
    node2 [label="L165:\lt412 = true\lt413 = t412\lgoto L167\l"];
    node3 [label="L166:\lt414 = false\lt413 = t414\l"];
    node4 [label="L167:\lreturn t413\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node3;
    node3 -> node3;
    }
    subgraph "cluster_Board_size_of_board" {
        label="Board.size_of_board";
        color=blue;
    node0 [label="L_auto_68:\lparam initial\lt0 = call length()\lreturn t0\l"];
    node0 -> node0;
    }
    subgraph "cluster_Board_board_init" {
        label="Board.board_init";
        color=blue;
    node0 [label="L_auto_69:\lparam start\lt1 = call Board.size_of_board(start)\lsize = t1\lt2 = 15\lt3 = size = t2\lif t3 goto L0\l"];
    node1 [label="L_auto_70:\lgoto L1\l"];
    node2 [label="L0:\lt4 = 3\lstore t4 -> rows\lt5 = 5\lstore t5 -> columns\lstore size -> board_size\lt6 = size\lgoto L2\l"];
    node3 [label="L1:\lt7 = 16\lt8 = size = t7\lif t8 goto L3\l"];
    node4 [label="L_auto_71:\lgoto L4\l"];
    node5 [label="L3:\lt9 = 4\lstore t9 -> rows\lt10 = 4\lstore t10 -> columns\lstore size -> board_size\lt11 = size\lgoto L5\l"];
    node6 [label="L4:\lt12 = 20\lt13 = size = t12\lif t13 goto L6\l"];
    node7 [label="L_auto_72:\lgoto L7\l"];
    node8 [label="L6:\lt14 = 4\lstore t14 -> rows\lt15 = 5\lstore t15 -> columns\lstore size -> board_size\lt16 = size\lgoto L8\l"];
    node9 [label="L7:\lt17 = 21\lt18 = size = t17\lif t18 goto L9\l"];
    node10 [label="L_auto_73:\lgoto L10\l"];
    node11 [label="L9:\lt19 = 3\lstore t19 -> rows\lt20 = 7\lstore t20 -> columns\lstore size -> board_size\lt21 = size\lgoto L11\l"];
    node12 [label="L10:\lt22 = 25\lt23 = size = t22\lif t23 goto L12\l"];
    node13 [label="L_auto_74:\lgoto L13\l"];
    node14 [label="L12:\lt24 = 5\lstore t24 -> rows\lt25 = 5\lstore t25 -> columns\lstore size -> board_size\lt26 = size\lgoto L14\l"];
    node15 [label="L13:\lt27 = 28\lt28 = size = t27\lif t28 goto L15\l"];
    node16 [label="L_auto_75:\lgoto L16\l"];
    node17 [label="L15:\lt29 = 7\lstore t29 -> rows\lt30 = 4\lstore t30 -> columns\lstore size -> board_size\lt31 = size\lgoto L17\l"];
    node18 [label="L16:\lt32 = 5\lstore t32 -> rows\lt33 = 5\lstore t33 -> columns\lstore size -> board_size\lt31 = size\l"];
    node19 [label="L17:\lt26 = t31\l"];
    node20 [label="L14:\lt21 = t26\l"];
    node21 [label="L11:\lt16 = t21\l"];
    node22 [label="L8:\lt11 = t16\l"];
    node23 [label="L5:\lt6 = t11\l"];
    node24 [label="L2:\lreturn self\l"];
    node0 -> node0;
    node0 -> node1;
    node0 -> node2;
    node1 -> node1;
    node1 -> node2;
    node2 -> node2;
    node2 -> node20;
    node2 -> node3;
    node3 -> node3;
    node3 -> node5;
    node3 -> node4;
    node4 -> node4;
    node4 -> node5;
    node5 -> node5;
    node5 -> node19;
    node5 -> node6;
    node6 -> node6;
    node6 -> node8;
    node6 -> node7;
    node7 -> node7;
    node7 -> node8;
    node8 -> node8;
    node8 -> node18;
    node8 -> node9;
    node9 -> node11;
    node9 -> node9;
    node9 -> node10;
    node10 -> node10;
    node10 -> node11;
    node11 -> node11;
    node11 -> node18;
    node11 -> node12;
    node11 -> node14;
    node12 -> node12;
    node12 -> node13;
    node13 -> node13;
    node13 -> node14;
    node14 -> node14;
    node14 -> node18;
    node14 -> node17;
    node14 -> node15;
    node15 -> node15;
    node15 -> node16;
    node16 -> node16;
    node16 -> node17;
    node17 -> node18;
    node17 -> node17;
    node18 -> node18;
    node18 -> node19;
    node19 -> node19;
    node19 -> node20;
    node20 -> node20;
    node20 -> node21;
    }
    subgraph "cluster_Main_main" {
        label="Main.main";
        color=blue;
    node0 [label="L_auto_76:\lt415 = \"Welcome to the Game of Life.\n\"\lt416 = call Main.out_string(t415)\lt417 = \"There are many initial states to choose from. \n\"\lt418 = call Main.out_string(t417)\l"];
    node1 [label="L168:\lt419 = call Main.prompt2()\lif t419 goto L169\l"];
    node2 [label="L_auto_77:\lgoto L170\l"];
    node3 [label="L169:\lt420 = true\lcontinue = t420\lt421 = call Main.option()\lchoice = t421\lt422 = call new CellularAutomaton()\lt423 = call init(choice)\lstore t423 -> cells\lt424 = load cells\lt425 = call print()\l"];
    node4 [label="L171:\lif continue goto L172\l"];
    node5 [label="L_auto_78:\lgoto L173\l"];
    node6 [label="L172:\lt426 = call Main.prompt()\lif t426 goto L174\l"];
    node7 [label="L_auto_79:\lgoto L175\l"];
    node8 [label="L174:\lt427 = load cells\lt428 = call evolve()\lt429 = load cells\lt430 = call print()\lt431 = t430\lgoto L176\l"];
    node9 [label="L175:\lt432 = false\lcontinue = t432\lt431 = t432\l"];
    node10 [label="L176:\lgoto L171\l"];
    node11 [label="L173:\lgoto L168\l"];
    node12 [label="L170:\lreturn self\l"];
    node0 -> node0;
    node0 -> node1;
    node1 -> node1;
    node1 -> node2;
    node1 -> node10;
    node2 -> node2;
    node2 -> node3;
    node3 -> node3;
    node3 -> node4;
    node4 -> node9;
    node4 -> node5;
    node5 -> node5;
    node5 -> node6;
    node6 -> node8;
    node6 -> node6;
    node6 -> node7;
    node7 -> node7;
    node7 -> node8;
    node8 -> node8;
    node8 -> node9;
    node9 -> node9;
    node9 -> node3;
    node9 -> node0;
    node10 -> node10;
    }
}

